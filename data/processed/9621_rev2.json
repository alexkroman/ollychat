[
  {
    "name": "Start Time",
    "description": "start time of the process",
    "queries": [
      "process_start_time_seconds{app=\"$app\", instance=\"$instance\"} * 1000"
    ]
  },
  {
    "name": "Total Cache Requests",
    "description": "The number of cache request received",
    "queries": [
      "registry_storage_cache_total{instance=\"$instance\",type=\"Request\"}"
    ]
  },
  {
    "name": "Total Hit Cache Requests",
    "description": "The number of cache request received (hits)",
    "queries": [
      "registry_storage_cache_total{instance=\"$instance\",type=\"Hit\"}"
    ]
  },
  {
    "name": "Total Missed Cache Requests",
    "description": "The number of cache request received (miss)",
    "queries": [
      "registry_storage_cache_total{instance=\"$instance\",type=\"Miss\"}"
    ]
  },
  {
    "name": "Resident Memory Usage",
    "description": "Process Resident Memory Usage",
    "queries": [
      "avg(process_resident_memory_bytes{instance=\"$instance\"})"
    ]
  },
  {
    "name": "Average CPU Usage",
    "description": "Average user and system CPU time spent in seconds.",
    "queries": [
      "avg(rate(process_cpu_seconds_total{instance=\"$instance\"}[5m]))"
    ]
  },
  {
    "name": "Average Memory Usage",
    "description": "Virtual and Resident memory size in bytes, averages over 5 min interval",
    "queries": [
      "avg(rate(process_resident_memory_bytes{instance=\"$instance\"}[5m]))",
      "avg(rate(process_virtual_memory_bytes{instance=\"$instance\"}[5m]))"
    ]
  },
  {
    "name": "Open File Descriptors",
    "description": "Number of open file descriptors",
    "queries": [
      "process_open_fds{instance=\"$instance\"}"
    ]
  },
  {
    "name": "HTTP Requests",
    "description": "The HTTP requests",
    "queries": [
      "ceil(rate(registry_http_requests_total{instance=\"$instance\"}[5m]))"
    ]
  },
  {
    "name": "In-Flight HTTP Requests",
    "description": "The in-flight HTTP requests",
    "queries": [
      "registry_http_in_flight_requests{instance=\"$instance\"}"
    ]
  },
  {
    "name": "Registry Cache Requests Rate",
    "description": "The rate of registry cache requests",
    "queries": [
      "ceil(rate(registry_storage_cache_total{instance=\"$instance\"}[5m]))"
    ]
  },
  {
    "name": "Registry Action Latency",
    "description": "",
    "queries": [
      "increase(registry_storage_action_seconds_sum{instance=\"$instance\"}[2m]) * 1000"
    ]
  },
  {
    "name": "HTTP Request Latencies in seconds (blob)",
    "description": "",
    "queries": [
      "rate(registry_http_request_duration_seconds_bucket{handler=\"blob\"}[10m])"
    ]
  },
  {
    "name": "Upload HTTP Request Latencies in seconds (base)",
    "description": "",
    "queries": [
      "rate(registry_http_request_duration_seconds_bucket{handler=\"base\"}[10m])"
    ]
  },
  {
    "name": "Upload HTTP Request Latencies in seconds (blob_upload)",
    "description": "",
    "queries": [
      "rate(registry_http_request_duration_seconds_bucket{handler=\"blob_upload\"}[10m])"
    ]
  },
  {
    "name": "Manifest HTTP Request Latencies in seconds (manifest)",
    "description": "",
    "queries": [
      "rate(registry_http_request_duration_seconds_bucket{handler=\"manifest\"}[10m])"
    ]
  },
  {
    "name": "Catalog HTTP Request Latencies in seconds (catalog)",
    "description": "",
    "queries": [
      "rate(registry_http_request_duration_seconds_bucket{handler=\"catalog\"}[10m])"
    ]
  }
]