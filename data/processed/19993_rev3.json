[
  {
    "name": "Clusters",
    "description": "",
    "queries": [
      "sum(\n  argocd_cluster_info\n)\n"
    ]
  },
  {
    "name": "Repositories",
    "description": "",
    "queries": [
      "count(\n  count(\n    argocd_app_info\n  )\n  by (repo)\n)\n"
    ]
  },
  {
    "name": "Applications",
    "description": "",
    "queries": [
      "sum(\n  argocd_app_info\n)\n"
    ]
  },
  {
    "name": "Health Status",
    "description": "",
    "queries": [
      "sum(\n  argocd_app_info\n) by (health_status)\n"
    ]
  },
  {
    "name": "Sync Status",
    "description": "",
    "queries": [
      "sum(\n  argocd_app_info\n) by (sync_status)\n"
    ]
  },
  {
    "name": "Applications",
    "description": "",
    "queries": [
      "sum(\n  argocd_app_info\n) by (job, dest_server, project, name, health_status, sync_status)\n"
    ]
  },
  {
    "name": "Sync Activity",
    "description": "",
    "queries": [
      "sum(\n  round(\n    increase(\n      argocd_app_sync_total[30m]\n    )\n  )\n) by (job, dest_server, project, name)\n"
    ]
  },
  {
    "name": "Sync Failures",
    "description": "",
    "queries": [
      "sum(\n  round(\n    increase(\n      argocd_app_sync_total[30m]\n    )\n  )\n) by (job, dest_server, project, application, phase)\n"
    ]
  },
  {
    "name": "Recociliation Activity",
    "description": "",
    "queries": [
      "sum(\n  round(\n    increase(\n      argocd_app_reconcile_count[30m]\n    )\n  )\n) by (namespace, job, dest_server)\n"
    ]
  },
  {
    "name": "Reconciliation Performance",
    "description": "",
    "queries": [
      "sum(\n  increase(\n    argocd_app_reconcile_bucket[30m]\n  )\n) by (le)\n"
    ]
  },
  {
    "name": "K8s API Activity",
    "description": "",
    "queries": [
      "sum(\n  round(\n    increase(\n      argocd_app_k8s_request_total[30m]\n    )\n  )\n) by (job, server, project, verb, resource_kind)\n"
    ]
  },
  {
    "name": "Pending Kubectl Runs",
    "description": "",
    "queries": [
      "sum(\n  argocd_kubectl_exec_pending\n) by (job, command)\n"
    ]
  },
  {
    "name": "Resource Objects",
    "description": "",
    "queries": [
      "sum(\n  argocd_cluster_api_resource_objects\n) by (namespace, job, server)\n"
    ]
  },
  {
    "name": "API Resources",
    "description": "",
    "queries": [
      "sum(\n  argocd_cluster_api_resources\n) by (namespace, job, server)\n"
    ]
  },
  {
    "name": "Cluster Events",
    "description": "",
    "queries": [
      "sum(\n  increase(\n    argocd_cluster_events_total[30m]\n  )\n) by (namespace, job, server)\n"
    ]
  },
  {
    "name": "Git Requests (ls-remote)",
    "description": "",
    "queries": [
      "sum(\n  increase(\n    argocd_git_request_total[30m]\n  )\n) by (namespace, job, repo)\n"
    ]
  },
  {
    "name": "Git Requests (checkout)",
    "description": "",
    "queries": [
      "sum(\n  increase(\n    argocd_git_request_total[30m]\n  )\n) by (namespace, job, repo)\n"
    ]
  },
  {
    "name": "Git Fetch Performance",
    "description": "",
    "queries": [
      "sum(\n  increase(\n    argocd_git_request_duration_seconds_bucket[30m]\n  )\n) by (le)\n"
    ]
  },
  {
    "name": "Git Ls-remote Performance",
    "description": "",
    "queries": [
      "sum(\n  increase(\n    argocd_git_request_duration_seconds_bucket[30m]\n  )\n) by (le)\n"
    ]
  }
]