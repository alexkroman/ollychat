[
  {
    "name": "Namespace(s) usage on total cluster CPU in %",
    "description": "",
    "queries": [
      "sum(rate(container_cpu_usage_seconds_total[30m])) / sum(machine_cpu_cores)"
    ]
  },
  {
    "name": "Namespace(s) usage on total cluster RAM in %",
    "description": "",
    "queries": [
      "sum(container_memory_working_set_bytes) / sum(machine_memory_bytes)"
    ]
  },
  {
    "name": "Kubernetes Resource Count",
    "description": "",
    "queries": [
      "sum(kube_pod_info)",
      "sum(kube_service_info)",
      "sum(kube_ingress_info)",
      "sum(kube_deployment_labels)",
      "sum(kube_statefulset_labels)",
      "sum(kube_daemonset_labels)",
      "sum(kube_persistentvolumeclaim_info)",
      "sum(kube_hpa_labels)",
      "sum(kube_configmap_info)",
      "sum(kube_secret_info)",
      "sum(kube_networkpolicy_labels)"
    ]
  },
  {
    "name": "Namespace(s) CPU Usage in cores",
    "description": "",
    "queries": [
      "sum(rate(container_cpu_usage_seconds_total[30m]))",
      "sum(kube_pod_container_resource_requests)",
      "sum(kube_pod_container_resource_limits)",
      "sum(machine_cpu_cores)"
    ]
  },
  {
    "name": "Namespace(s) RAM Usage in bytes",
    "description": "",
    "queries": [
      "sum(container_memory_working_set_bytes)",
      "sum(kube_pod_container_resource_requests)",
      "sum(kube_pod_container_resource_limits)",
      "sum(machine_memory_bytes)"
    ]
  },
  {
    "name": "CPU usage by Pod",
    "description": "",
    "queries": [
      "sum(rate(container_cpu_usage_seconds_total.*\", cluster=\"$cluster\"}[30m])) by (pod)"
    ]
  },
  {
    "name": "Memory usage by Pod",
    "description": "",
    "queries": [
      "sum(container_memory_working_set_bytes.*\", cluster=\"$cluster\"}) by (pod)"
    ]
  },
  {
    "name": "CPU Throttled seconds by pod",
    "description": "",
    "queries": [
      "sum(rate(container_cpu_cfs_throttled_seconds_total.*\", cluster=\"$cluster\"}[30m])) by (pod) > 0"
    ]
  },
  {
    "name": "Kubernetes Pods QoS classes",
    "description": "",
    "queries": [
      "sum(kube_pod_status_qos_class) by (qos_class)",
      "sum(kube_pod_info)"
    ]
  },
  {
    "name": "Kubernetes Pods Status Reason",
    "description": "",
    "queries": [
      "sum(kube_pod_status_reason) by (reason)"
    ]
  },
  {
    "name": "OOM Events by namespace, pod",
    "description": "No data is generally a good thing here.",
    "queries": [
      "sum(increase(container_oom_events_total\", cluster=\"$cluster\"}[30m])) by (namespace, pod) > 0"
    ]
  },
  {
    "name": "Container Restarts by namespace, pod",
    "description": "No data is generally a good thing here.",
    "queries": [
      "sum(increase(kube_pod_container_status_restarts_total\", cluster=\"$cluster\"}[30m])) by (namespace, pod) > 0"
    ]
  },
  {
    "name": "Nb of pods by state",
    "description": "",
    "queries": [
      "sum(kube_pod_container_status_ready.*\", cluster=\"$cluster\"})",
      "sum(kube_pod_container_status_running.*\", cluster=\"$cluster\"})",
      "sum(kube_pod_container_status_waiting)",
      "sum(kube_pod_container_status_restarts_total)",
      "sum(kube_pod_container_status_terminated)"
    ]
  },
  {
    "name": "Nb of containers by pod",
    "description": "",
    "queries": [
      "sum(kube_pod_container_info.*\", cluster=\"$cluster\"}) by (pod)"
    ]
  },
  {
    "name": "Replicas available by deployment",
    "description": "",
    "queries": [
      "sum(kube_deployment_status_replicas_available) by (deployment)"
    ]
  },
  {
    "name": "Replicas unavailable by deployment",
    "description": "",
    "queries": [
      "sum(kube_deployment_status_replicas_unavailable.*\", cluster=\"$cluster\"}) by (deployment)"
    ]
  },
  {
    "name": "Pods with unexpected status",
    "description": "List of pods that are not in Running or Succeeded status.",
    "queries": [
      "sum(kube_pod_status_phase) by (pod) > 0"
    ]
  },
  {
    "name": "Container Image Used",
    "description": "",
    "queries": [
      "count(rate(container_cpu_usage_seconds_total.*\", cluster=\"$cluster\"}[30m])) by (image)"
    ]
  },
  {
    "name": "Persistent Volumes - Capacity and usage in %",
    "description": "",
    "queries": [
      "sum(kubelet_volume_stats_used_bytes) by (persistentvolumeclaim) / sum(kubelet_volume_stats_capacity_bytes) by (persistentvolumeclaim)"
    ]
  },
  {
    "name": "Persistent Volumes - Capacity and usage in bytes",
    "description": "",
    "queries": [
      "sum(kubelet_volume_stats_used_bytes) by (persistentvolumeclaim)",
      "sum(kubelet_volume_stats_capacity_bytes) by (persistentvolumeclaim)"
    ]
  },
  {
    "name": "Persistent Volumes - Inodes",
    "description": "",
    "queries": [
      "1 - sum(kubelet_volume_stats_inodes_used) by (persistentvolumeclaim) / sum(kubelet_volume_stats_inodes) by (persistentvolumeclaim)"
    ]
  },
  {
    "name": "Network - Bandwidth by pod",
    "description": "",
    "queries": [
      "sum(rate(container_network_receive_bytes_total.*\", cluster=\"$cluster\"}[30m])) by (pod)",
      "- sum(rate(container_network_transmit_bytes_total.*\", cluster=\"$cluster\"}[30m])) by (pod)"
    ]
  },
  {
    "name": "Network - Packets Rate by pod",
    "description": "",
    "queries": [
      "sum(rate(container_network_receive_packets_total.*\", cluster=\"$cluster\"}[30m])) by (pod)",
      "- sum(rate(container_network_transmit_packets_total.*\", cluster=\"$cluster\"}[30m])) by (pod)"
    ]
  },
  {
    "name": "Network - Packets Dropped by pod",
    "description": "",
    "queries": [
      "sum(rate(container_network_receive_packets_dropped_total.*\", cluster=\"$cluster\"}[30m])) by (pod)",
      "- sum(rate(container_network_transmit_packets_dropped_total.*\", cluster=\"$cluster\"}[30m])) by (pod)"
    ]
  },
  {
    "name": "Network - Errors by pod",
    "description": "",
    "queries": [
      "sum(rate(container_network_receive_errors_total.*\", cluster=\"$cluster\"}[30m])) by (pod)",
      "- sum(rate(container_network_transmit_errors_total.*\", cluster=\"$cluster\"}[30m])) by (pod)"
    ]
  }
]