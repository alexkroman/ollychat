[
  {
    "name": "CPU Cores Requests",
    "description": "",
    "queries": [
      "max(sum(kube_pod_container_resource_requests_cpu_cores) by (instance)) / min(sum(kube_node_status_allocatable_cpu_cores) by (instance))"
    ]
  },
  {
    "name": "Idle CPU",
    "description": "",
    "queries": [
      "sum(rate(node_cpu_seconds_total[2m])) * 100 / count(node_cpu_seconds_total)"
    ]
  },
  {
    "name": "CPU Cores",
    "description": "This represents the total [CPU resource requests](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#meaning-of-cpu) in the cluster.\nFor comparison the total [allocatable CPU cores](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/node-allocatable.md) is also shown.",
    "queries": [
      "min(sum(kube_node_status_allocatable_cpu_cores) by (instance))",
      "max(sum(kube_pod_container_resource_requests_cpu_cores) by (instance))"
    ]
  },
  {
    "name": "System Load",
    "description": "",
    "queries": [
      "sum(node_load1)",
      "sum(node_load5)",
      "sum(node_load15)"
    ]
  },
  {
    "name": "Memory Requests",
    "description": "",
    "queries": [
      "max(sum(kube_pod_container_resource_requests_memory_bytes) by (instance)) / min(sum(kube_node_status_allocatable_memory_bytes) by (instance))"
    ]
  },
  {
    "name": "Memory Free",
    "description": "",
    "queries": [
      "1 - ((sum(node_memory_MemTotal_bytes) - sum(node_memory_MemFree_bytes) - sum(node_memory_Buffers_bytes) - sum(node_memory_Cached_bytes)) / sum(node_memory_MemTotal_bytes))"
    ]
  },
  {
    "name": "Memory",
    "description": "This represents the total [memory resource requests](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#meaning-of-memory) in the cluster.\nFor comparison the total [allocatable memory](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/node-allocatable.md) is also shown.",
    "queries": [
      "min(sum(kube_node_status_allocatable_memory_bytes) by (instance))",
      "max(sum(kube_pod_container_resource_requests_memory_bytes) by (instance))",
      "max(sum(kube_pod_container_resource_limits_memory_bytes) by (instance))",
      "sum(node_memory_MemTotal) - sum(node_memory_MemFree) - sum(node_memory_Buffers) - sum(node_memory_Cached)"
    ]
  },
  {
    "name": "Memory Usage",
    "description": "",
    "queries": [
      "sum(node_memory_MemTotal_bytes) - sum(node_memory_MemFree_bytes) - sum(node_memory_Buffers_bytes) - sum(node_memory_Cached_bytes)",
      "sum(node_memory_Buffers_bytes)",
      "sum(node_memory_Cached_bytes)",
      "sum(node_memory_MemFree_bytes)"
    ]
  },
  {
    "name": "Disk Space Usage",
    "description": "",
    "queries": [
      "(sum(node_filesystem_size_bytes) - sum(node_filesystem_free_bytes)) / sum(node_filesystem_size_bytes)"
    ]
  },
  {
    "name": "Disk I/O",
    "description": "",
    "queries": [
      "sum(rate(node_disk_read_bytes_total[5m]))",
      "sum(rate(node_disk_written_bytes_total[5m]))",
      "sum(rate(node_disk_io_time_seconds_total[5m]))"
    ]
  },
  {
    "name": "Pod Utilization",
    "description": "",
    "queries": [
      "100 - (sum(kube_node_status_capacity_pods) - sum(kube_pod_info)) / sum(kube_node_status_capacity_pods) * 100"
    ]
  },
  {
    "name": "Cluster Pod Utilization",
    "description": "",
    "queries": [
      "sum(kube_pod_info)",
      "sum(kube_node_status_capacity_pods)"
    ]
  },
  {
    "name": "Network Received",
    "description": "",
    "queries": [
      "sum(rate(node_network_receive_bytes_total[5m]))"
    ]
  },
  {
    "name": "Network Transmitted",
    "description": "",
    "queries": [
      "sum(rate(node_network_transmit_bytes_total[5m]))"
    ]
  }
]