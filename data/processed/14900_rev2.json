[
  {
    "name": "CPU Usage",
    "description": "",
    "queries": [
      "100 - (cpu_usage_idle)"
    ]
  },
  {
    "name": "Current CPU Utilization %",
    "description": "",
    "queries": [
      "100 - (cpu_usage_idle)"
    ]
  },
  {
    "name": "Current Memory Utilization",
    "description": "",
    "queries": [
      "sum(mem_used)"
    ]
  },
  {
    "name": "Network Input",
    "description": "",
    "queries": [
      "rate(net_bytes_recv[5m])",
      "rate(net_conntrack_listener_conn_accepted_total[5m])"
    ]
  },
  {
    "name": "Network Ouput",
    "description": "",
    "queries": [
      "rate(net_bytes_sent[5m])",
      "rate(net_conntrack_listener_conn_accepted_total[5m])"
    ]
  },
  {
    "name": "Response 2XX / 5m",
    "description": "Requests with 200 Status Code",
    "queries": [
      "sum_over_time(nginxlog_resp_bytes[5m])"
    ]
  },
  {
    "name": "Total Response 200 Req. [24h]",
    "description": "Total number of request in 24 hours for 200 response by nginx server",
    "queries": [
      "sum_over_time(nginxlog_resp_bytes[24h])"
    ]
  },
  {
    "name": "Response 4XX  /5m",
    "description": "Requests with 4XX Status Code",
    "queries": [
      "sum_over_time(nginxlog_resp_bytes[5m])"
    ]
  },
  {
    "name": "Total Response 404 Req. [24h]",
    "description": "Total number of request in 24 hours for 404 response from nginx server",
    "queries": [
      "sum_over_time(nginxlog_resp_bytes[5m])"
    ]
  },
  {
    "name": "Response 3XX",
    "description": "Requests with 3XX Status Code",
    "queries": [
      "sum_over_time(nginxlog_resp_bytes[5m])"
    ]
  },
  {
    "name": "Response 5XX",
    "description": "Requests with 5XX Status Code",
    "queries": [
      "sum_over_time(nginxlog_resp_bytes[5m])"
    ]
  },
  {
    "name": "Total Request 503 Resonse",
    "description": "",
    "queries": [
      "sum_over_time(nginxlog_resp_bytes[5m])"
    ]
  },
  {
    "name": "Nginx Connections Accepted",
    "description": "The total number of accepted connections from clients since the nginx master process started. Note that reloading configurations or restarting worker processes will not reset this metric. If you terminate and restart the master process, you will reset the metric.\n\n",
    "queries": [
      "nginx_accepts"
    ]
  },
  {
    "name": "Nginx Writing",
    "description": "The current number of connections from clients where nginx is writing a response back to the client.\n",
    "queries": [
      "nginx_writing\t"
    ]
  },
  {
    "name": "Nginx Active Connections[accepted]",
    "description": "The current number of active (accepted) connections from clients. Includes all connections with the statuses Idle / Waiting, Reading, and Writing.",
    "queries": [
      "nginx_active\t"
    ]
  },
  {
    "name": "Nginx Waiting Connections",
    "description": "The current number of connections from clients that are in the Idle / Waiting state.",
    "queries": [
      "nginx_waiting\t"
    ]
  },
  {
    "name": "Handled Request",
    "description": "The total number of handled connections from clients since the nginx master process started. This will be lower than accepted only in cases where a connection is dropped before it is handled.",
    "queries": [
      "nginx_handled\t"
    ]
  },
  {
    "name": "Nginx Requests",
    "description": "The total number of client requests since the nginx master process started. A request is an application-level (HTTP, etc.) event. It occurs when a client requests a resource via the application protocol. A single connection can (and often does) make many requests. So most of the time, there are more requests than accepted/handled connections.",
    "queries": [
      "nginx_requests\t"
    ]
  },
  {
    "name": "nginx_reading",
    "description": "The current number of (accepted) connections from clients where nginx is reading the request. Measured at the time the status module was queried.",
    "queries": [
      "nginx_reading"
    ]
  },
  {
    "name": "Each Request Detail",
    "description": "",
    "queries": [
      "nginxlog_resp_bytes"
    ]
  }
]