[
  {
    "name": "Total Number Of Volumes",
    "description": "The total number of volumes in the Longhorn storage system",
    "queries": [
      "count(longhorn_volume_capacity_bytes) OR on() vector(0)"
    ]
  },
  {
    "name": "Number Of Healthy Volumes",
    "description": "Healthy volumes are volumes that are attaching to a node and have the number of healthy replicas equals to the expected number of replicas.",
    "queries": [
      "count(longhorn_volume_robustness==1) OR on() vector(0)"
    ]
  },
  {
    "name": "Volume Actual Size/Capacity",
    "description": "Note that Longhorn volume actual size is not the size of the filesystem inside a Longhorn volume.  See more at : https://longhorn.io/docs/1.0.2/volumes-and-nodes/volume-size/#volume-actual-size",
    "queries": [
      "( (avg by (volume) (longhorn_volume_actual_size_bytes))/ (avg by (volume) (longhorn_volume_capacity_bytes)) ) *100"
    ]
  },
  {
    "name": "Number Of Degraded Volumes",
    "description": "Degraded volumes are volumes that have the number of healthy replicas smaller than the expected number of replicas. e.g. User creates a volume with 2 replicas but 1 replicas is failed.",
    "queries": [
      "count(longhorn_volume_robustness==2) OR on() vector(0)"
    ]
  },
  {
    "name": "Number Of Fault Volumes",
    "description": "Fault volumes are volumes that doesn't have any healthy replica.",
    "queries": [
      "count(longhorn_volume_robustness==3) OR on() vector(0)"
    ]
  },
  {
    "name": "Volume Capacity",
    "description": "The capacity of each Longhorn volume",
    "queries": [
      "avg by (volume) (longhorn_volume_capacity_bytes)"
    ]
  },
  {
    "name": "Number Of Attached Volumes",
    "description": "Attached volumes are volumes that are currently attaching to a node",
    "queries": [
      "count(longhorn_volume_state==2) OR on() vector(0)"
    ]
  },
  {
    "name": "Number Of Detached Volumes",
    "description": "Detached volumes are volumes that aren't currently attaching to a node",
    "queries": [
      "count(longhorn_volume_state==3) OR on() vector(0)"
    ]
  },
  {
    "name": "Total Number Of Nodes",
    "description": "The total number of nodes in the Longhorn storage system",
    "queries": [
      "avg(longhorn_node_count_total) OR on() vector(0)"
    ]
  },
  {
    "name": "Number Of Disabled Nodes",
    "description": "Disabled nodes are nodes that are disabled by the user.  When users disable a node, Longhorn will not use the node's storage for replica scheduling. Note that Longhorn can still attach a volume to disabled nodes because the actual data of the volume could be on a different node.",
    "queries": [
      "count(longhorn_node_status==0) OR on() vector(0)"
    ]
  },
  {
    "name": "Node Storage Usage/Capacity",
    "description": "",
    "queries": [
      "(longhorn_node_storage_usage_bytes/longhorn_node_storage_capacity_bytes) * 100"
    ]
  },
  {
    "name": "Number Of Schedulable Nodes",
    "description": "Schedulable nodes are nodes that Longhorn can use their storage for replica scheduling.",
    "queries": [
      "(count(longhorn_node_status==1) OR on() vector(0)) - (count(longhorn_node_status==0) OR on() vector(0))"
    ]
  },
  {
    "name": "Number Of Failed Nodes",
    "description": "Failed Nodes are nodes that Longhorn cannot attach volumes to and cannot schedule replicas onto. e.g: when the nodes went down.",
    "queries": [
      "(avg(longhorn_node_count_total) OR on() vector(0)) - (count(longhorn_node_status==1) OR on() vector(0))"
    ]
  },
  {
    "name": "Node Capacity",
    "description": "",
    "queries": [
      "longhorn_node_storage_capacity_bytes"
    ]
  },
  {
    "name": "Number of Volumes Per Node",
    "description": "",
    "queries": [
      "count by (node) (longhorn_volume_state==2)"
    ]
  },
  {
    "name": "Disk Space Usage",
    "description": "The capacity of each Longhorn volume",
    "queries": [
      "(longhorn_disk_usage_bytes/longhorn_disk_capacity_bytes)*100"
    ]
  },
  {
    "name": "Disk Capacity",
    "description": "",
    "queries": [
      "longhorn_disk_capacity_bytes"
    ]
  },
  {
    "name": "Node CPU Usage/Capacity",
    "description": "",
    "queries": [
      "(longhorn_node_cpu_usage_millicpu / longhorn_node_cpu_capacity_millicpu) * 100"
    ]
  },
  {
    "name": "Node Memory Usage/Capacity",
    "description": "",
    "queries": [
      "( longhorn_node_memory_usage_bytes / longhorn_node_memory_capacity_bytes ) * 100"
    ]
  },
  {
    "name": "Instance Manager CPU Usage",
    "description": "Instance managers are pods that contains the engine and replica processes of Longhorn volumes. See more at https://longhorn.io/docs/1.0.2/concepts/#11-the-longhorn-manager-and-the-longhorn-engine ",
    "queries": [
      "longhorn_instance_manager_cpu_usage_millicpu"
    ]
  },
  {
    "name": "Instance Manager CPU Usage/Request",
    "description": "Instance managers are pods that contains the engine and replica processes of Longhorn volumes. See more at https://longhorn.io/docs/1.0.2/concepts/#11-the-longhorn-manager-and-the-longhorn-engine ",
    "queries": [
      "(longhorn_instance_manager_cpu_usage_millicpu/longhorn_instance_manager_cpu_requests_millicpu)*100"
    ]
  },
  {
    "name": "Instance Manager Memory Usage",
    "description": "Instance managers are pods that contains the engine and replica processes of Longhorn volumes. See more at https://longhorn.io/docs/1.0.2/concepts/#11-the-longhorn-manager-and-the-longhorn-engine ",
    "queries": [
      "longhorn_instance_manager_memory_usage_bytes"
    ]
  },
  {
    "name": "Longhorn Manager CPU Usage",
    "description": "Longhorn manager pods manage the control plane of the Longhorn system. e.g. Volume scheduling, attaching, detaching, backup, etc,..",
    "queries": [
      "longhorn_manager_cpu_usage_millicpu"
    ]
  },
  {
    "name": "Longhorn Manager Memory Usage",
    "description": "Longhorn manager pods manage the control plane of the Longhorn system. e.g. Volume scheduling, attaching, detaching, backup, etc,..",
    "queries": [
      "longhorn_manager_memory_usage_bytes"
    ]
  }
]