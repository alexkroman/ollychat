[
  {
    "name": "Total Requests",
    "description": "increase(v range-vector) calculates the increase in the time series in the range vector. Breaks in monotonicity (such as counter resets due to target restarts) are automatically adjusted for. The increase is extrapolated to cover the full time range as specified in the range vector selector, so that it is possible to get a non-integer result even if a counter increases only by integer increments.",
    "queries": [
      "sum(irate(django_http_requests_total_by_transport_total[1m]))"
    ]
  },
  {
    "name": "2XX Responses",
    "description": "",
    "queries": [
      "sum(irate(django_http_responses_total_by_status_total[1m]))"
    ]
  },
  {
    "name": "4XX Responses",
    "description": "",
    "queries": [
      "sum(irate(django_http_responses_total_by_status_total[1m]))"
    ]
  },
  {
    "name": "5XX Responses",
    "description": "",
    "queries": [
      "sum(irate(django_http_responses_total_by_status_total[1m]))"
    ]
  },
  {
    "name": "Requests",
    "description": "",
    "queries": [
      "sum(irate(django_http_requests_total_by_view_transport_method_total[1m])) by(method, view)"
    ]
  },
  {
    "name": "Request Latency",
    "description": "",
    "queries": [
      "histogram_quantile(0.50, sum(rate(django_http_requests_latency_seconds_by_view_method_bucket[5m])) by (job, le))",
      "histogram_quantile(0.95, sum(rate(django_http_requests_latency_seconds_by_view_method_bucket[5m])) by (job, le))",
      "histogram_quantile(0.99, sum(rate(django_http_requests_latency_seconds_by_view_method_bucket[5m])) by (job, le))",
      "histogram_quantile(0.999, sum(rate(django_http_requests_latency_seconds_by_view_method_bucket[5m])) by (job, le))"
    ]
  },
  {
    "name": "Responses",
    "description": "",
    "queries": [
      "sum(irate(django_http_responses_before_middlewares_total[1m])) by(job)"
    ]
  },
  {
    "name": "Response Status",
    "description": "",
    "queries": [
      "sum(irate(django_http_responses_total_by_status_total[1m])) by(status)"
    ]
  },
  {
    "name": "Database Ops",
    "description": "",
    "queries": [
      "sum(irate(django_db_execute_total[1m])) by (vendor)"
    ]
  },
  {
    "name": "Models stats",
    "description": "",
    "queries": [
      "sum(irate(django_model_deletes_total[1m])) by (model)",
      "sum(irate(django_model_inserts_total[1m])) by (model)",
      "sum(irate(django_model_updates_total[1m])) by (model)"
    ]
  }
]