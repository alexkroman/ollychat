[
  {
    "name": "Samples scraped/s",
    "description": "Shows the rate of [samples](https://docs.victoriametrics.com/keyconcepts/#raw-samples) scraped from configured targets.",
    "queries": [
      "sum(rate(vm_promscrape_scraped_samples_sum[30m]))"
    ]
  },
  {
    "name": "Samples ingested/s",
    "description": "Shows the rate of ingested [samples](https://docs.victoriametrics.com/keyconcepts/#raw-samples)",
    "queries": [
      "sum(rate(vmagent_rows_inserted_total[30m]))"
    ]
  },
  {
    "name": "Targets scraped/s",
    "description": "Shows the number of targets scraped per second.",
    "queries": [
      "sum(rate(vm_promscrape_scrapes_total[30m])) "
    ]
  },
  {
    "name": "Scrape targets",
    "description": "Shows total number of all configured scrape targets in state `up` or `down`.\n\nSee `http://vmagent-host:8429/targets` to get list of all targets. \n",
    "queries": [
      "sum(vm_promscrape_targets)",
      "sum(vm_promscrape_targets)"
    ]
  },
  {
    "name": "Log errors (30m)",
    "description": "Shows number of generated  error messages in  logs over last 30m. Non-zero value may be a sign of connectivity or missconfiguration errors.",
    "queries": [
      "sum(increase(vm_log_messages_total[30m]))"
    ]
  },
  {
    "name": "Persistent queue size",
    "description": "Persistent queue size shows size of pending samples in bytes which hasn't been flushed to remote storage yet. \nIncreasing of value might be a sign of connectivity issues. In such cases, vmagent starts to flush pending data on disk with attempt to send it later once connection is restored.",
    "queries": [
      "sum(vm_persistentqueue_bytes_pending)"
    ]
  },
  {
    "name": "",
    "description": "",
    "queries": [
      "sum(vm_app_version) by(job, short_version)"
    ]
  },
  {
    "name": "Uptime",
    "description": "",
    "queries": [
      "sum(up) by (job)"
    ]
  },
  {
    "name": "Samples rate ($instance)",
    "description": "Shows in/out [samples](https://docs.victoriametrics.com/keyconcepts/#raw-samples) rate including push and pull models. \n\nThe out-rate could be different to in-rate because of replication or additional timeseries added by vmagent for every scraped target.\n\nClick on the line and choose Drilldown to show CPU usage per instance\n",
    "queries": [
      "sum(rate([30m])) by(job)",
      "sum(rate(vmagent_remotewrite_block_size_rows_sum[30m])) by(job)"
    ]
  },
  {
    "name": "Persistent queue size  ($instance) to ($url)",
    "description": "Shows the persistent queue size of pending samples in bytes >2MB which hasn't been flushed to remote storage yet. \n\nIncreasing of value might be a sign of connectivity issues. In such cases, vmagent starts to flush pending data on disk with attempt to send it later once connection is restored.\n\nRemote write URLs are hidden by default but might be unveiled once `-remoteWrite.showURL` is set to true.\n\nClick on the line and choose Drilldown to show the persistent queue size per instance.\n",
    "queries": [
      "sum(vmagent_remotewrite_pending_data_bytes) by (job, url) > 2e6"
    ]
  },
  {
    "name": "Logging rate",
    "description": "Shows the rate of logging the messages by their level. Unexpected spike in rate is a good reason to check logs.",
    "queries": [
      "sum(rate(vm_log_messages_total[30m])) by (job, level) > 0"
    ]
  },
  {
    "name": "Persistent queue dropped rate ($instance)",
    "description": "Shows rate of dropped [samples](https://docs.victoriametrics.com/keyconcepts/#raw-samples) from persistent queue. vmagent drops samples from queue if in-memory and on-disk queues are full and it is unable to flush them to remote storage.\nThe max size of on-disk queue is configured by `-remoteWrite.maxDiskUsagePerURL` flag.",
    "queries": [
      "sum(rate(vm_persistentqueue_bytes_dropped_total[30m])) by (path) > 0"
    ]
  },
  {
    "name": "Requests rate  ($instance)",
    "description": "Shows the rate of requests served by vmagent HTTP server.",
    "queries": [
      "sum(rate(vmagent_http_requests_total[30m])) by(job, path) > 0"
    ]
  },
  {
    "name": "Errors rate  ($instance)",
    "description": "Errors rate shows rate for multiple metrics that track possible errors in vmagent, such as network or parsing errors.",
    "queries": [
      "sum(rate(vmagent_http_request_errors_total[30m])) by(job, protocol) > 0",
      "sum(rate(vm_protoparser_read_errors_total[30m])) by(job, type) > 0",
      "sum(rate(vm_ingestserver_request_errors_total[30m])) by(job, type) > 0",
      "sum(rate(vm_protoparser_unmarshal_errors_total[30m])) by(job, type) > 0",
      "sum(rate(vm_promscrape_dial_errors_total[30m])) by(job) > 0"
    ]
  }
]