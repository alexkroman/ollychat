[
  {
    "name": "Total request handling time",
    "description": "Total time taken for nginx and upstream servers to process a request and send a response",
    "queries": [
      "histogram_quantile(\n  0.5,\n  sum by (le)(\n    rate(\n      nginx_ingress_controller_request_duration_seconds_bucket[1m]\n    )\n  )\n)",
      "histogram_quantile(\n  0.95,\n  sum by (le)(\n    rate(\n    nginx_ingress_controller_request_duration_seconds_bucket[1m]\n    )\n  )\n)",
      "histogram_quantile(\n  0.99,\n  sum by (le)(\n    rate(\n      nginx_ingress_controller_request_duration_seconds_bucket[1m]\n    )\n  )\n)"
    ]
  },
  {
    "name": "Upstream response time",
    "description": "The time spent on receiving the response from the upstream server",
    "queries": [
      "histogram_quantile(\n  0.5,\n  sum by (le)(\n    rate(\n      nginx_ingress_controller_response_duration_seconds_bucket[1m]\n    )\n  )\n)",
      "histogram_quantile(\n  0.95,\n  sum by (le)(\n    rate(\n    nginx_ingress_controller_response_duration_seconds_bucket[1m]\n    )\n  )\n)",
      "histogram_quantile(\n  0.99,\n  sum by (le)(\n    rate(\n      nginx_ingress_controller_response_duration_seconds_bucket[1m]\n    )\n  )\n)"
    ]
  },
  {
    "name": "Request volume by Path",
    "description": "",
    "queries": [
      "  sum by (path)(\n    rate(\n      nginx_ingress_controller_request_duration_seconds_count[1m]\n    )\n  )\n"
    ]
  },
  {
    "name": "Median upstream response time by Path",
    "description": "For each path observed, its median upstream response time",
    "queries": [
      "histogram_quantile(\n  .5,\n  sum by (le, path)(\n    rate(\n      nginx_ingress_controller_response_duration_seconds_bucket[1m]\n    )\n  )\n)"
    ]
  },
  {
    "name": "Response error rate by Path",
    "description": "Percentage of 4xx and 5xx responses among all responses.",
    "queries": [
      "sum by (path) (rate(nginx_ingress_controller_request_duration_seconds_count[1m])) / sum by (path) (rate(nginx_ingress_controller_request_duration_seconds_count[1m]))"
    ]
  },
  {
    "name": "Upstream time consumed by Path",
    "description": "For each path observed, the sum of upstream request time",
    "queries": [
      "sum by (path) (rate(nginx_ingress_controller_response_duration_seconds_sum[1m]))"
    ]
  },
  {
    "name": "Response error volume by Path",
    "description": "",
    "queries": [
      "  sum (\n    rate(\n      nginx_ingress_controller_request_duration_seconds_count[1m]\n    )\n  ) by(path, status)\n"
    ]
  },
  {
    "name": "Average response size by Path",
    "description": "",
    "queries": [
      "sum (\n  rate (\n      nginx_ingress_controller_response_size_sum [1m]\n  )\n)  by (path) / sum (\n  rate(\n      nginx_ingress_controller_response_size_count [1m]\n  )\n) by (path)\n",
      "    sum (rate(nginx_ingress_controller_response_size_bucket[1m])) by (le)\n"
    ]
  },
  {
    "name": "Upstream service latency",
    "description": "",
    "queries": [
      "sum (\n  rate(\n      nginx_ingress_controller_ingress_upstream_latency_seconds_sum [1m]\n)) / sum (\n  rate(\n      nginx_ingress_controller_ingress_upstream_latency_seconds_count [1m]\n  )\n)\n"
    ]
  }
]