[
  {
    "name": "Number of instances",
    "description": "",
    "queries": [
      "count(alertmanager_build_info)"
    ]
  },
  {
    "name": "Instance versions and up time",
    "description": "Table containing list of Alertmanager instances showing it's version, up time, last reload time and if it was successful.",
    "queries": [
      "time() - (alertmanager_build_info * on (instance, cluster) group_left process_start_time_seconds)",
      "time() - alertmanager_config_last_reload_success_timestamp_seconds",
      "alertmanager_config_last_reload_successful"
    ]
  },
  {
    "name": "Cluster size",
    "description": "Number of peers in the Alertmanager cluster.",
    "queries": [
      "max(alertmanager_cluster_members)"
    ]
  },
  {
    "name": "Number of active alerts",
    "description": "Current number of active alerts.",
    "queries": [
      "max(alertmanager_alerts)"
    ]
  },
  {
    "name": "Number of suppressed alerts",
    "description": "Current number of suppressed alerts.",
    "queries": [
      "max(alertmanager_alerts)"
    ]
  },
  {
    "name": "Number of active silences",
    "description": "Current number of active silences.",
    "queries": [
      "max(alertmanager_silences)"
    ]
  },
  {
    "name": "Notifications sent from $instance",
    "description": "Number of sent notifications to distinct integrations such as PagerDuty, Slack and so on. On negative axis are displayed failed notifications.",
    "queries": [
      "sum(increase(alertmanager_notifications_total[$__interval])) by (integration)",
      "sum(increase(alertmanager_notifications_failed_total[$__interval])) by (integration)"
    ]
  },
  {
    "name": "Notification durations per integration on $instance",
    "description": "Duration of notification sends in 0.99 and 0.9 quantiles per integration.",
    "queries": [
      "sum(histogram_quantile(0.9,rate(alertmanager_notification_latency_seconds_bucket[$__interval]))) by (integration)",
      "sum(histogram_quantile(0.99,rate(alertmanager_notification_latency_seconds_bucket[$__interval]))) by (integration)"
    ]
  },
  {
    "name": "Active alerts in $instance",
    "description": "Number of alerts by state such as `active`, `suppressed` etc.",
    "queries": [
      "sum(alertmanager_alerts) by (state)"
    ]
  },
  {
    "name": "Received alerts by status for $instance",
    "description": "Number of received alerts from Prometheus by status `firing` on positive axis and `resolved` on negative axis.",
    "queries": [
      "sum(increase(alertmanager_alerts_received_total[$__interval])) by (status)"
    ]
  }
]